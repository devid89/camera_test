/** @file: Общие константы и математические преобразования, необходимые для проекта по "улучшению" лица.
**/
const int SrcI  = 256;  // Разрешение по горизонтали
const int SrcJ  = 256;  // и вертикали исходного изображения.


/// Нормализация градиентов.
/// @todo: стоит добавить легкое автоконтрастирование, пока - просто трэшхолд.
inline int norm(int grad, int scale, int num)
{
   int res = (int)(0.5 + grad / scale + (num - 1) / 2);  // Укладываем градиенты в диапазон.
   if (res < 0   ) return 0;                             // Ограничиваем значения слева
   if (res >= num) return num - 1;                       // и справа.
   return res;
}


/// Класс преобразований для расчета местоположения, масштаба и поворота.
struct Transform
{
   int  dx;
   int  dy;
   int  sx;
   int  sy;
   bool valid;

   /// Инициализируем преобразование координатами отрезка.
   Transform(int p1, int p2, int x1, int y1, int x2, int y2)
   {
      // Если не получится рассчитать параметры, то не будем их использовать.
      valid = false;

      // Из координат ключевых точек считаем смещение/масштаб/поворот.
      // ...
   }
};
